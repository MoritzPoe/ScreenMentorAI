{"ast":null,"code":"var _jsxFileName = \"/Users/mikhailkonkov/Desktop/vibegpt/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { CameraIcon, MicrophoneIcon } from '@heroicons/react/24/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    socket.on('ai_response', response => {\n      const newMessage = {\n        type: 'ai',\n        content: response.text\n      };\n      if (response.audio) {\n        newMessage.audioUrl = `data:audio/mp3;base64,${response.audio}`;\n      }\n      setMessages(prev => [...prev, newMessage]);\n    });\n    return () => {\n      socket.off('ai_response');\n    };\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const startScreenCapture = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      setIsScreenSharing(true);\n      const track = stream.getVideoTracks()[0];\n\n      // Take screenshot every 5 seconds\n      const interval = setInterval(() => {\n        const videoElement = document.createElement('video');\n        videoElement.srcObject = stream;\n        videoElement.onloadedmetadata = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = videoElement.videoWidth;\n          canvas.height = videoElement.videoHeight;\n          const ctx = canvas.getContext('2d');\n          ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(videoElement, 0, 0);\n          const imageData = canvas.toDataURL('image/jpeg');\n          socket.emit('screen_data', imageData);\n        };\n      }, 5000);\n      track.onended = () => {\n        clearInterval(interval);\n        setIsScreenSharing(false);\n      };\n    } catch (err) {\n      console.error('Error capturing screen:', err);\n      setIsScreenSharing(false);\n    }\n  };\n  const startAudioRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      const audioChunks = [];\n      mediaRecorder.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (reader.result instanceof ArrayBuffer) {\n            socket.emit('audio_data', reader.result);\n          }\n        };\n        reader.readAsArrayBuffer(audioBlob);\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Error recording audio:', err);\n      setIsRecording(false);\n    }\n  };\n  const stopAudioRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4 space-y-4\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rounded-lg p-4 max-w-[70%] ${message.type === 'user' ? 'bg-blue-500 text-white' : 'bg-white text-gray-800'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), message.audioUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n            controls: true,\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"source\", {\n              src: message.audioUrl,\n              type: \"audio/mp3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t bg-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isScreenSharing ? undefined : startScreenCapture,\n          className: `p-2 rounded-full ${isScreenSharing ? 'bg-red-500 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n          children: /*#__PURE__*/_jsxDEV(CameraIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isRecording ? stopAudioRecording : startAudioRecording,\n          className: `p-2 rounded-full ${isRecording ? 'bg-red-500 text-white' : 'bg-gray-200 hover:bg-gray-300'}`,\n          children: /*#__PURE__*/_jsxDEV(MicrophoneIcon, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8NMaeP+MYXdW7e6NelrDC1emyos=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","CameraIcon","MicrophoneIcon","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","isRecording","setIsRecording","isScreenSharing","setIsScreenSharing","mediaRecorderRef","messagesEndRef","on","response","newMessage","type","content","text","audio","audioUrl","prev","off","_messagesEndRef$curre","current","scrollIntoView","behavior","startScreenCapture","stream","navigator","mediaDevices","getDisplayMedia","video","track","getVideoTracks","interval","setInterval","videoElement","document","createElement","srcObject","onloadedmetadata","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","imageData","toDataURL","emit","onended","clearInterval","err","console","error","startAudioRecording","getUserMedia","mediaRecorder","MediaRecorder","audioChunks","ondataavailable","event","push","data","onstop","audioBlob","Blob","reader","FileReader","onload","result","ArrayBuffer","readAsArrayBuffer","start","stopAudioRecording","stop","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","controls","src","ref","onClick","undefined","_c","$RefreshReg$"],"sources":["/Users/mikhailkonkov/Desktop/vibegpt/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { CameraIcon, MicrophoneIcon, PaperAirplaneIcon } from '@heroicons/react/24/solid';\n\nconst socket = io('http://localhost:8000');\n\ninterface Message {\n  type: 'user' | 'ai';\n  content: string;\n  audioUrl?: string;\n}\n\nfunction App() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    socket.on('ai_response', (response) => {\n      const newMessage: Message = {\n        type: 'ai',\n        content: response.text,\n      };\n      \n      if (response.audio) {\n        newMessage.audioUrl = `data:audio/mp3;base64,${response.audio}`;\n      }\n      \n      setMessages(prev => [...prev, newMessage]);\n    });\n\n    return () => {\n      socket.off('ai_response');\n    };\n  }, []);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages]);\n\n  const startScreenCapture = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n      setIsScreenSharing(true);\n\n      const track = stream.getVideoTracks()[0];\n      \n      // Take screenshot every 5 seconds\n      const interval = setInterval(() => {\n        const videoElement = document.createElement('video');\n        videoElement.srcObject = stream;\n        videoElement.onloadedmetadata = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = videoElement.videoWidth;\n          canvas.height = videoElement.videoHeight;\n          const ctx = canvas.getContext('2d');\n          ctx?.drawImage(videoElement, 0, 0);\n          const imageData = canvas.toDataURL('image/jpeg');\n          socket.emit('screen_data', imageData);\n        };\n      }, 5000);\n\n      track.onended = () => {\n        clearInterval(interval);\n        setIsScreenSharing(false);\n      };\n    } catch (err) {\n      console.error('Error capturing screen:', err);\n      setIsScreenSharing(false);\n    }\n  };\n\n  const startAudioRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      \n      const audioChunks: BlobPart[] = [];\n      \n      mediaRecorder.ondataavailable = (event) => {\n        audioChunks.push(event.data);\n      };\n\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n        const reader = new FileReader();\n        reader.onload = () => {\n          if (reader.result instanceof ArrayBuffer) {\n            socket.emit('audio_data', reader.result);\n          }\n        };\n        reader.readAsArrayBuffer(audioBlob);\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Error recording audio:', err);\n      setIsRecording(false);\n    }\n  };\n\n  const stopAudioRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gray-100\">\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`flex ${\n              message.type === 'user' ? 'justify-end' : 'justify-start'\n            }`}\n          >\n            <div\n              className={`rounded-lg p-4 max-w-[70%] ${\n                message.type === 'user'\n                  ? 'bg-blue-500 text-white'\n                  : 'bg-white text-gray-800'\n              }`}\n            >\n              <p>{message.content}</p>\n              {message.audioUrl && (\n                <audio controls className=\"mt-2\">\n                  <source src={message.audioUrl} type=\"audio/mp3\" />\n                </audio>\n              )}\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <div className=\"border-t bg-white p-4\">\n        <div className=\"flex items-center space-x-4\">\n          <button\n            onClick={isScreenSharing ? undefined : startScreenCapture}\n            className={`p-2 rounded-full ${\n              isScreenSharing\n                ? 'bg-red-500 text-white'\n                : 'bg-gray-200 hover:bg-gray-300'\n            }`}\n          >\n            <CameraIcon className=\"h-6 w-6\" />\n          </button>\n          <button\n            onClick={isRecording ? stopAudioRecording : startAudioRecording}\n            className={`p-2 rounded-full ${\n              isRecording\n                ? 'bg-red-500 text-white'\n                : 'bg-gray-200 hover:bg-gray-300'\n            }`}\n          >\n            <MicrophoneIcon className=\"h-6 w-6\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}